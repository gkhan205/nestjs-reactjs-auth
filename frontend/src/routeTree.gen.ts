/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as protectedImport } from './routes/__protected'
import { Route as authImport } from './routes/__auth'
import { Route as IndexImport } from './routes/index'
import { Route as protectedDashboardImport } from './routes/__protected/dashboard'
import { Route as authSignupImport } from './routes/__auth/signup'
import { Route as authLoginImport } from './routes/__auth/login'

// Create/Update Routes

const protectedRoute = protectedImport.update({
  id: '/__protected',
  getParentRoute: () => rootRoute,
} as any)

const authRoute = authImport.update({
  id: '/__auth',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const protectedDashboardRoute = protectedDashboardImport.update({
  path: '/dashboard',
  getParentRoute: () => protectedRoute,
} as any)

const authSignupRoute = authSignupImport.update({
  path: '/signup',
  getParentRoute: () => authRoute,
} as any)

const authLoginRoute = authLoginImport.update({
  path: '/login',
  getParentRoute: () => authRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/__auth': {
      id: '/__auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof authImport
      parentRoute: typeof rootRoute
    }
    '/__protected': {
      id: '/__protected'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof protectedImport
      parentRoute: typeof rootRoute
    }
    '/__auth/login': {
      id: '/__auth/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof authLoginImport
      parentRoute: typeof authImport
    }
    '/__auth/signup': {
      id: '/__auth/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof authSignupImport
      parentRoute: typeof authImport
    }
    '/__protected/dashboard': {
      id: '/__protected/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof protectedDashboardImport
      parentRoute: typeof protectedImport
    }
  }
}

// Create and export the route tree

interface authRouteChildren {
  authLoginRoute: typeof authLoginRoute
  authSignupRoute: typeof authSignupRoute
}

const authRouteChildren: authRouteChildren = {
  authLoginRoute: authLoginRoute,
  authSignupRoute: authSignupRoute,
}

const authRouteWithChildren = authRoute._addFileChildren(authRouteChildren)

interface protectedRouteChildren {
  protectedDashboardRoute: typeof protectedDashboardRoute
}

const protectedRouteChildren: protectedRouteChildren = {
  protectedDashboardRoute: protectedDashboardRoute,
}

const protectedRouteWithChildren = protectedRoute._addFileChildren(
  protectedRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof protectedRouteWithChildren
  '/login': typeof authLoginRoute
  '/signup': typeof authSignupRoute
  '/dashboard': typeof protectedDashboardRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof protectedRouteWithChildren
  '/login': typeof authLoginRoute
  '/signup': typeof authSignupRoute
  '/dashboard': typeof protectedDashboardRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/__auth': typeof authRouteWithChildren
  '/__protected': typeof protectedRouteWithChildren
  '/__auth/login': typeof authLoginRoute
  '/__auth/signup': typeof authSignupRoute
  '/__protected/dashboard': typeof protectedDashboardRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '' | '/login' | '/signup' | '/dashboard'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '' | '/login' | '/signup' | '/dashboard'
  id:
    | '__root__'
    | '/'
    | '/__auth'
    | '/__protected'
    | '/__auth/login'
    | '/__auth/signup'
    | '/__protected/dashboard'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  authRoute: typeof authRouteWithChildren
  protectedRoute: typeof protectedRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  authRoute: authRouteWithChildren,
  protectedRoute: protectedRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/__auth",
        "/__protected"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/__auth": {
      "filePath": "__auth.tsx",
      "children": [
        "/__auth/login",
        "/__auth/signup"
      ]
    },
    "/__protected": {
      "filePath": "__protected.tsx",
      "children": [
        "/__protected/dashboard"
      ]
    },
    "/__auth/login": {
      "filePath": "__auth/login.tsx",
      "parent": "/__auth"
    },
    "/__auth/signup": {
      "filePath": "__auth/signup.tsx",
      "parent": "/__auth"
    },
    "/__protected/dashboard": {
      "filePath": "__protected/dashboard.tsx",
      "parent": "/__protected"
    }
  }
}
ROUTE_MANIFEST_END */
